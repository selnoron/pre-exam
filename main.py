# # ----------------- 1 ----------------- # #
# создать функцию
def even() -> int:
    num: int = int(input("Введите число -> "))
    # возвращаем ответ по формуле
    return 2 * num - 2

print(f"ответ ---------> {even()}")


# # ----------------- 2 ----------------- # #
# создаем функцию
def remove() -> list:
    # создаем массив и с помощью цикла с N ым диапазоном 
    # вводим элементы туда
    arr: list[str] = [input(f"элемент {i + 1} -> ") for i in range(int(input("Введите количество элементов -> ")))]
    # возвращаем отсортированный массив, который имеет элементы с шагом 2
    return arr[:: 2]
print(*remove())


# # ----------------- 3 ----------------- # #
# создаем функцию
def find() -> int:
    # вводим х и у в одну строку
    x, y = map(int, input("введите x и у -> ").split())
    # проверяем если 
    # х и у = 0, то 0
    # х и у больше нуля, то 1
    # х больше, а у меньше нуля, то 4
    # х меньше, а у больше нуля, то 2
    # х и у меньше нуля, то 3
    if x == 0 or y == 0: return 0
    if x > 0 and y > 0: return 1
    if x > 0 and y < 0: return 4
    if x < 0 and y > 0: return 2
    if x < 0 and y < 0: return 3

print(f"ответ ---------> {find()}")


# # ----------------- 4 ----------------- # #
# я сделал два варианта, так как не понял  условие задачи. 
# первая функция требует чтобы скобки были расположены по правильному синтаксису
# А вторая функция уже не требует этого, ей нужно чтобы количество 
# обоих скобок было одинаково
def check() -> bool:
    # вводим скобки
    s: str = input("Введите -> ")
    # обьявляем счетчик
    c: int = 0
    # обьявляем цикл
    for i in s:
        # Тут проверяем, если скобка открыта то счетчик прибавляем
        if i == "(":
            c += 1
        # если скобка закрыта то убавляем счетчик
        elif i == ")":
            c -= 1
            # тут проверяем, если счетчик ушел в минус то он не подходит по синтаксису
            if c < 0:
                return False
    # если счетчик больше одного, то скобки могут быть не закрыты 
    if c > 0:
        return False
    # если после всех проверок функция дошла до суда, то все ок 
    return True

print(f"ответ -> {check()}")

def check2() -> bool:
    # вводим скобки
    s: str = input("Введите -> ")
    # считаем количество скобок
    c1 = s.count("(")
    c2 = s.count(")")
    # сравниваем количество обоих скобок
    # если они не равны, то окн'т
    if c1 != c2:
        return False
    # если после всех проверок функция дошла до суда, то все ок 
    return True

print(f"ответ -> {check2()}")
